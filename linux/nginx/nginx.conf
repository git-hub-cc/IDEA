# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Gzip Compression Settings ##################################
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
    ##############################################################


    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        return  301 https://ppmc.club;
    }

# Settings for a TLS enabled server.

    server {
         #SSL 默认访问端口号为 443, 并开启 HTTP/2
         listen 443 ssl http2;
         listen [::]:443 ssl http2;
         #请填写绑定证书的域名https://ppmc.club
         server_name ppmc.club;
         #请填写证书文件的相对路径或绝对路径
         ssl_certificate ppmc.club_bundle.crt;
         #请填写私钥文件的相对路径或绝对路径
         ssl_certificate_key ppmc.club.key;
         ssl_session_timeout 5m;
         #请按照以下协议配置
         ssl_protocols TLSv1.2 TLSv1.3;
         #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
         ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
         ssl_prefer_server_ciphers on;

        proxy_intercept_errors on;

        # ==================== 新增配置开始 ====================
        # 当请求URI精确匹配 / 时，从此 location 提供服务
        # Nginx 会优先处理这个精确匹配的规则
        # ==================== 新增配置结束 ====================
        location /blog {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location /navhub {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location /mediahub {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location /game {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location /codehub {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location /aiflow {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location /eyebuddy {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }


        location /player {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location /chatgpt {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }
        location /mp3metadata {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        # ==================== 关键修改点 START ====================
        location /code/ {
            # 增加允许的客户端请求体的最大值，以解决文件上传时 "413 Content Too Large" 的问题。
            # 50m 表示 50 Megabytes，您可以根据需要调整。
            client_max_body_size 50m;

            proxy_pass http://10.1.8.7:8082/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            index  index.html;
        }
        # ==================== 关键修改点 END ======================

        # 对于其他所有请求，都代理到后端服务
        location /webchat/ {
            proxy_pass http://10.1.8.7:8082/;  # Spring Boot 的地址
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;


            # >>> WebSocket 支持关键头部
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            index  index.html;
        }
        location = /index.html {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location /favicon.ico {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }

        location = / {
            # 指定文件的根目录
            root   /usr/share/nginx/html;
            # 指定在访问 / 时，默认提供的文件
            index  index.html;
        }
        error_page 404 /40x.html;
        location = /40x.html {
           root   /usr/share/nginx/html/blog/error;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
           root   /usr/share/nginx/html/blog/error;
        }
    }


}