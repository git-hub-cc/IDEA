# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Gzip Compression Settings ##################################
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/atom+xml application/javascript application/json application/ld+json
        application/manifest+json application/rss+xml application/vnd.geo+json
        application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json
        application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml
        image/x-icon text/cache-manifest text/css text/plain text/vcard
        text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;
    ##############################################################

    # HTTP server block for redirecting to HTTPS
    server {
        listen       80;
        listen       [::]:80;
        # <--- 建议明确指定域名
        server_name  ppmc.club www.ppmc.club;

        # <--- 修改: 使用变量进行重定向，保留URI
        return 301 https://$host$request_uri;
    }

    # HTTPS server block
    server {
         listen 443 ssl http2;
         listen [::]:443 ssl http2;
         # <--- 建议包含 www (如果适用)
         server_name ppmc.club www.ppmc.club;
         client_max_body_size 512M;

         # <--- 修改: 强烈建议使用绝对路径
        # 使用相对路径，Nginx 会在 /etc/nginx/ 目录下寻找
        ssl_certificate ppmc.club_bundle.crt;
        ssl_certificate_key ppmc.club.key;

         ssl_session_timeout 5m;
         ssl_protocols TLSv1.2 TLSv1.3;
         ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
         ssl_prefer_server_ciphers on;

         # <--- 建议: 添加HSTS头增强安全性
         add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

         proxy_intercept_errors on;

         # <--- 修改: 将 location = / 改为 location / 以匹配所有请求
         location /blog {
             # 指定文件的根目录
             root   /usr/share/nginx/html;
             # 指定在访问 / 时，默认提供的文件
             index  index.html;
         }

         location /navhub {
             # 指定文件的根目录
             root   /usr/share/nginx/html;
             # 指定在访问 / 时，默认提供的文件
             index  index.html;
         }

         location /mediahub {
             # 指定文件的根目录
             root   /usr/share/nginx/html;
             # 指定在访问 / 时，默认提供的文件
             index  index.html;
         }

         location /game {
             # 指定文件的根目录
             root   /usr/share/nginx/html;
             # 指定在访问 / 时，默认提供的文件
             index  index.html;
         }

         location /codehub {
             # 指定文件的根目录
             root   /usr/share/nginx/html;
             # 指定在访问 / 时，默认提供的文件
             index  index.html;
         }
         location /player {
             # 指定文件的根目录
             root   /usr/share/nginx/html;
             # 指定在访问 / 时，默认提供的文件
             index  index.html;
         }
         # 对于其他所有请求，都代理到后端服务
         location /demo/ {
             proxy_pass http://10.1.8.7:8080/;  # Spring Boot 的地址
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;


             # >>> WebSocket 支持关键头部
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
             index  index.html;
         }

         # 对于其他所有请求，都代理到后端服务
         location /code/ {
             proxy_pass http://10.1.8.7:8082/;  # Spring Boot 的地址
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;


             # >>> WebSocket 支持关键头部
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";

             # ========================= 推荐修改 START =========================
             # 增加代理读写超时时间，防止因长时间无数据传输而被 Nginx 断开连接
             # 这对于保持 WebSocket 长连接非常重要
             proxy_read_timeout 300s;
             proxy_send_timeout 300s;
             # ========================= 推荐修改 END ===========================

             index  index.html;
         }
         location = /index.html {
             # 指定文件的根目录
             root   /usr/share/nginx/html;
             # 指定在访问 / 时，默认提供的文件
             index  index.html;
         }

         location /favicon.ico {
             # 指定文件的根目录
             root   /usr/share/nginx/html;
             # 指定在访问 / 时，默认提供的文件
             index  index.html;
         }

        error_page 404 /40x.html;
        location = /40x.html {
           root   /usr/share/nginx/html/blog/error;
           internal; # <--- 建议: 标记为内部访问，防止用户直接访问错误页面
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
           root   /usr/share/nginx/html/blog/error;
           internal; # <--- 建议: 标记为内部访问
        }
    }

    # 你可以继续在这里包含其他的 .conf 文件
    include /etc/nginx/conf.d/*.conf;
}