[
  {
    "id": "action.newFile",
    "label": "文件: 新建文件",
    "description": "在当前或选定位置创建一个新文件",
    "type": "action",
    "action": "new-file"
  },
  {
    "id": "action.saveFile",
    "label": "文件: 保存当前文件",
    "description": "保存当前激活的编辑器中的文件 (Ctrl+S)",
    "type": "action",
    "action": "save-file"
  },
  {
    "id": "action.formatCode",
    "label": "编辑器: 格式化文档",
    "description": "格式化当前激活的编辑器中的代码 (Ctrl+Alt+L)",
    "type": "action",
    "action": "format-code"
  },
  {
    "id": "action.findInFile",
    "label": "编辑器: 查找",
    "description": "在当前文件中查找文本 (Ctrl+F)",
    "type": "action",
    "action": "find-in-file"
  },
  {
    "id": "action.gitCommit",
    "label": "Git: 提交",
    "description": "将所有更改提交到本地仓库 (Ctrl+K)",
    "type": "action",
    "action": "vcs-commit"
  },
  {
    "id": "action.gitPull",
    "label": "Git: 拉取",
    "description": "从远程仓库拉取最新更改 (Ctrl+T)",
    "type": "action",
    "action": "vcs-pull"
  },
  {
    "id": "action.gitPush",
    "label": "Git: 推送",
    "description": "将本地提交推送到远程仓库 (Ctrl+Shift+K)",
    "type": "action",
    "action": "vcs-push"
  },
  {
    "id": "action.runCode",
    "label": "运行: 运行",
    "description": "构建并运行当前项目 (Shift+F10)",
    "type": "action",
    "action": "run-code"
  },
  {
    "id": "action.debugCode",
    "label": "运行: 调试",
    "description": "启动调试会话 (Shift+F9)",
    "type": "action",
    "action": "debug-code"
  },
  {
    "id": "java.snippet.main",
    "label": "psvm",
    "description": "插入 public static void main(String[] args) 方法",
    "type": "snippet",
    "language": "java",
    "body": "public static void main(String[] args) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.sout",
    "label": "sout",
    "description": "插入 System.out.println()",
    "type": "snippet",
    "language": "java",
    "body": "System.out.println(${0});"
  },
  {
    "id": "java.snippet.class",
    "label": "class",
    "description": "创建一个新的 public class",
    "type": "snippet",
    "language": "java",
    "body": "public class ${1:ClassName} {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.fori",
    "label": "fori",
    "description": "创建一个 for 循环",
    "type": "snippet",
    "language": "java",
    "body": "for (int ${1:i} = 0; ${1:i} < ${2:length}; ${1:i}++) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.forr",
    "label": "forr",
    "description": "创建一个反向 for 循环",
    "type": "snippet",
    "language": "java",
    "body": "for (int ${1:i} = ${2:array}.length - 1; ${1:i} >= 0; ${1:i}--) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.iter",
    "label": "iter",
    "description": "创建一个增强 for 循环 (foreach)",
    "type": "snippet",
    "language": "java",
    "body": "for (${1:Type} ${2:element} : ${3:collection}) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.soutv",
    "label": "soutv",
    "description": "打印变量名和值",
    "type": "snippet",
    "language": "java",
    "body": "System.out.println(\"${1:variable} = \" + ${1:variable});"
  },
  {
    "id": "java.snippet.soutm",
    "label": "soutm",
    "description": "打印当前类名和方法名",
    "type": "snippet",
    "language": "java",
    "body": "System.out.println(\"${TM_CLASS_NAME}.${TM_METHOD_NAME}\");"
  },
  {
    "id": "java.snippet.soutp",
    "label": "soutp",
    "description": "打印当前方法参数",
    "type": "snippet",
    "language": "java",
    "body": "System.out.println(${0});"
  },
  {
    "id": "java.snippet.ifn",
    "label": "ifn",
    "description": "if (variable == null)",
    "type": "snippet",
    "language": "java",
    "body": "if (${1:variable} == null) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.inn",
    "label": "inn",
    "description": "if (variable != null)",
    "type": "snippet",
    "language": "java",
    "body": "if (${1:variable} != null) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.inst",
    "label": "inst",
    "description": "if (variable instanceof Type)",
    "type": "snippet",
    "language": "java",
    "body": "if (${1:variable} instanceof ${2:Type}) {\n\t${2:Type} ${3:var} = (${2:Type}) ${1:variable};\n\t${0}\n}"
  },
  {
    "id": "java.snippet.prsf",
    "label": "prsf",
    "description": "private static final",
    "type": "snippet",
    "language": "java",
    "body": "private static final ${1:Type} ${2:NAME} = ${3:value};"
  },
  {
    "id": "java.snippet.psf",
    "label": "psf",
    "description": "public static final",
    "type": "snippet",
    "language": "java",
    "body": "public static final ${1:Type} ${2:NAME} = ${3:value};"
  },
  {
    "id": "java.snippet.psfi",
    "label": "psfi",
    "description": "public static final int",
    "type": "snippet",
    "language": "java",
    "body": "public static final int ${1:NAME} = ${2:0};"
  },
  {
    "id": "java.snippet.psfs",
    "label": "psfs",
    "description": "public static final String",
    "type": "snippet",
    "language": "java",
    "body": "public static final String ${1:NAME} = \"${2:value}\";"
  },
  {
    "id": "java.snippet.thr",
    "label": "thr",
    "description": "throw new ...",
    "type": "snippet",
    "language": "java",
    "body": "throw new ${1:Exception}();"
  },
  {
    "id": "java.snippet.lazy",
    "label": "lazy",
    "description": "双重检查锁懒汉式单例",
    "type": "snippet",
    "language": "java",
    "body": "private static volatile ${1:Type} instance;\n\npublic static ${1:Type} getInstance() {\n\tif (instance == null) {\n\t\tsynchronized (${2:ClassName}.class) {\n\t\t\tif (instance == null) {\n\t\t\t\tinstance = new ${1:Type}();\n\t\t\t}\n\t\t}\n\t}\n\treturn instance;\n}"
  },
  {
    "id": "java.snippet.synchronized",
    "label": "synchronized",
    "description": "创建同步代码块",
    "type": "snippet",
    "language": "java",
    "body": "synchronized (${1:lock}) {\n\t${0}\n}"
  },
  {
    "id": "html.snippet.html5",
    "label": "html:5",
    "description": "创建 HTML5 文档结构",
    "type": "snippet",
    "language": "html",
    "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<title>${1:Document}</title>\n</head>\n<body>\n\t${0}\n</body>\n</html>"
  },
  {
    "id": "html.snippet.divclass",
    "label": "div.class",
    "description": "创建一个带 class 的 div",
    "type": "snippet",
    "language": "html",
    "body": "<div class=\"${1:className}\">\n\t${0}\n</div>"
  },
  {
    "id": "html.snippet.linkcss",
    "label": "link:css",
    "description": "引入 CSS 文件",
    "type": "snippet",
    "language": "html",
    "body": "<link rel=\"stylesheet\" href=\"${1:style.css}\">"
  },
  {
    "id": "html.snippet.scriptsrc",
    "label": "script:src",
    "description": "引入 JavaScript 文件",
    "type": "snippet",
    "language": "html",
    "body": "<script src=\"${1:app.js}\"></script>"
  },
  {
    "id": "css.snippet.posa",
    "label": "pos:a",
    "description": "position: absolute;",
    "type": "snippet",
    "language": "css",
    "body": "position: absolute;"
  },
  {
    "id": "css.snippet.df",
    "label": "d:f",
    "description": "display: flex;",
    "type": "snippet",
    "language": "css",
    "body": "display: flex;"
  },
  {
    "id": "css.snippet.jcc",
    "label": "jc:c",
    "description": "justify-content: center;",
    "type": "snippet",
    "language": "css",
    "body": "justify-content: center;"
  },
  {
    "id": "css.snippet.media",
    "label": "@media",
    "description": "创建媒体查询",
    "type": "snippet",
    "language": "css",
    "body": "@media screen and (max-width: ${1:600px}) {\n\t${0}\n}"
  },
  {
    "id": "js.snippet.log",
    "label": "log",
    "description": "插入 console.log()",
    "type": "snippet",
    "language": "javascript",
    "body": "console.log(${0});"
  },
  {
    "id": "js.snippet.fun",
    "label": "fun",
    "description": "创建一个函数声明",
    "type": "snippet",
    "language": "javascript",
    "body": "function ${1:name}(${2:params}) {\n\t${0}\n}"
  },
  {
    "id": "js.snippet.af",
    "label": "af",
    "description": "创建一个箭头函数",
    "type": "snippet",
    "language": "javascript",
    "body": "(${1:params}) => {\n\t${0}\n}"
  },
  {
    "id": "js.snippet.prom",
    "label": "prom",
    "description": "创建一个新的 Promise",
    "type": "snippet",
    "language": "javascript",
    "body": "new Promise((resolve, reject) => {\n\t${0}\n});"
  },
  {
    "id": "vue.snippet.vbase",
    "label": "v-base",
    "description": "创建 Vue 3 <script setup> 组件结构",
    "type": "snippet",
    "language": "vue",
    "body": "<template>\n  <div>\n    ${0}\n  </div>\n</template>\n\n<script setup>\n\n</script>\n\n<style scoped>\n\n</style>"
  },
  {
    "id": "vue.snippet.vfor",
    "label": "v-for",
    "description": "插入 v-for 指令",
    "type": "snippet",
    "language": "vue",
    "body": "v-for=\"(${1:item}, index) in ${2:items}\" :key=\"index\""
  }
]