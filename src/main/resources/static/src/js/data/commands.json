[
  {
    "id": "action.newFile",
    "label": "文件: 新建文件",
    "description": "在当前或选定位置创建一个新文件",
    "type": "action",
    "action": "new-file"
  },
  {
    "id": "action.saveFile",
    "label": "文件: 保存当前文件",
    "description": "保存当前激活的编辑器中的文件 (Ctrl+S)",
    "type": "action",
    "action": "save-file"
  },
  {
    "id": "action.formatCode",
    "label": "编辑器: 格式化文档",
    "description": "格式化当前激活的编辑器中的代码 (Ctrl+Alt+L)",
    "type": "action",
    "action": "format-code"
  },
  {
    "id": "action.findInFile",
    "label": "编辑器: 查找",
    "description": "在当前文件中查找文本 (Ctrl+F)",
    "type": "action",
    "action": "find-in-file"
  },
  {
    "id": "action.gitCommit",
    "label": "Git: 提交",
    "description": "将所有更改提交到本地仓库 (Ctrl+K)",
    "type": "action",
    "action": "vcs-commit"
  },
  {
    "id": "action.gitPull",
    "label": "Git: 拉取",
    "description": "从远程仓库拉取最新更改 (Ctrl+T)",
    "type": "action",
    "action": "vcs-pull"
  },
  {
    "id": "action.gitPush",
    "label": "Git: 推送",
    "description": "将本地提交推送到远程仓库 (Ctrl+Shift+K)",
    "type": "action",
    "action": "vcs-push"
  },
  {
    "id": "action.runCode",
    "label": "运行: 运行",
    "description": "构建并运行当前项目 (Shift+F10)",
    "type": "action",
    "action": "run-code"
  },
  {
    "id": "action.debugCode",
    "label": "运行: 调试",
    "description": "启动调试会话 (Shift+F9)",
    "type": "action",
    "action": "debug-code"
  },
  {
    "id": "java.snippet.main",
    "label": "psvm",
    "description": "插入 public static void main(String[] args) 方法",
    "type": "snippet",
    "language": "java",
    "body": "public static void main(String[] args) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.main.alias",
    "label": "main",
    "description": "插入 public static void main(String[] args) 方法 (psvm 的别名)",
    "type": "snippet",
    "language": "java",
    "body": "public static void main(String[] args) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.sout",
    "label": "sout",
    "description": "插入 System.out.println()",
    "type": "snippet",
    "language": "java",
    "body": "System.out.println(${0});"
  },
  {
    "id": "java.snippet.soutv",
    "label": "soutv",
    "description": "打印变量名和值: System.out.println(\"variable = \" + ...)",
    "type": "snippet",
    "language": "java",
    "body": "System.out.println(\"${1:variable} = \" + ${1:variable});"
  },
  {
    "id": "java.snippet.soutm",
    "label": "soutm",
    "description": "打印当前类名和方法名",
    "type": "snippet",
    "language": "java",
    "body": "System.out.println(\"${TM_CLASS_NAME}.${TM_METHOD_NAME}\");"
  },
  {
    "id": "java.snippet.soutp",
    "label": "soutp",
    "description": "打印当前方法参数",
    "type": "snippet",
    "language": "java",
    "body": "System.out.println(${0});"
  },
  {
    "id": "java.snippet.serr",
    "label": "serr",
    "description": "插入 System.err.println()",
    "type": "snippet",
    "language": "java",
    "body": "System.err.println(${0});"
  },
  {
    "id": "java.snippet.class",
    "label": "class",
    "description": "创建一个新的 public class",
    "type": "snippet",
    "language": "java",
    "body": "public class ${1:ClassName} {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.pclass",
    "label": "pclass",
    "description": "创建一个新的 private class",
    "type": "snippet",
    "language": "java",
    "body": "private class ${1:ClassName} {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.interface",
    "label": "interface",
    "description": "创建一个新的 public interface",
    "type": "snippet",
    "language": "java",
    "body": "public interface ${1:InterfaceName} {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.enum",
    "label": "enum",
    "description": "创建一个新的 public enum",
    "type": "snippet",
    "language": "java",
    "body": "public enum ${1:EnumName} {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.record",
    "label": "record",
    "description": "创建一个新的 public record (JDK 14+)",
    "type": "snippet",
    "language": "java",
    "body": "public record ${1:RecordName}(${2:String field}) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.fori",
    "label": "fori",
    "description": "创建一个 for 循环",
    "type": "snippet",
    "language": "java",
    "body": "for (int ${1:i} = 0; ${1:i} < ${2:length}; ${1:i}++) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.forr",
    "label": "forr",
    "description": "创建一个反向 for 循环",
    "type": "snippet",
    "language": "java",
    "body": "for (int ${1:i} = ${2:array}.length - 1; ${1:i} >= 0; ${1:i}--) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.iter",
    "label": "iter",
    "description": "创建一个增强 for 循环 (foreach)",
    "type": "snippet",
    "language": "java",
    "body": "for (${1:Type} ${2:element} : ${3:collection}) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.while",
    "label": "while",
    "description": "创建一个 while 循环",
    "type": "snippet",
    "language": "java",
    "body": "while (${1:condition}) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.do",
    "label": "do",
    "description": "创建一个 do-while 循环",
    "type": "snippet",
    "language": "java",
    "body": "do {\n\t${0}\n} while (${1:condition});"
  },
  {
    "id": "java.snippet.if",
    "label": "if",
    "description": "if (condition)",
    "type": "snippet",
    "language": "java",
    "body": "if (${1:condition}) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.ife",
    "label": "ife",
    "description": "if-else 语句",
    "type": "snippet",
    "language": "java",
    "body": "if (${1:condition}) {\n\t${0}\n} else {\n\t\n}"
  },
  {
    "id": "java.snippet.ifn",
    "label": "ifn",
    "description": "if (variable == null)",
    "type": "snippet",
    "language": "java",
    "body": "if (${1:variable} == null) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.inn",
    "label": "inn",
    "description": "if (variable != null)",
    "type": "snippet",
    "language": "java",
    "body": "if (${1:variable} != null) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.inst",
    "label": "inst",
    "description": "if (variable instanceof Type)",
    "type": "snippet",
    "language": "java",
    "body": "if (${1:variable} instanceof ${2:Type}) {\n\t${2:Type} ${3:var} = (${2:Type}) ${1:variable};\n\t${0}\n}"
  },
  {
    "id": "java.snippet.switch",
    "label": "switch",
    "description": "switch 语句",
    "type": "snippet",
    "language": "java",
    "body": "switch (${1:variable}) {\n\tcase ${2:value}:\n\t\t${0}\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n}"
  },
  {
    "id": "java.snippet.try",
    "label": "try",
    "description": "try-catch 代码块",
    "type": "snippet",
    "language": "java",
    "body": "try {\n\t${0}\n} catch (${1:Exception} ${2:e}) {\n\t${2:e}.printStackTrace();\n}"
  },
  {
    "id": "java.snippet.tryf",
    "label": "tryf",
    "description": "try-finally 代码块",
    "type": "snippet",
    "language": "java",
    "body": "try {\n\t${0}\n} finally {\n\t\n}"
  },
  {
    "id": "java.snippet.tryc",
    "label": "tryc",
    "description": "try-catch-finally 代码块 (同 try)",
    "type": "snippet",
    "language": "java",
    "body": "try {\n\t${0}\n} catch (${1:Exception} ${2:e}) {\n\t${2:e}.printStackTrace();\n} finally {\n\t\n}"
  },
  {
    "id": "java.snippet.prsf",
    "label": "prsf",
    "description": "private static final",
    "type": "snippet",
    "language": "java",
    "body": "private static final ${1:Type} ${2:NAME} = ${3:value};"
  },
  {
    "id": "java.snippet.psf",
    "label": "psf",
    "description": "public static final",
    "type": "snippet",
    "language": "java",
    "body": "public static final ${1:Type} ${2:NAME} = ${3:value};"
  },
  {
    "id": "java.snippet.psfi",
    "label": "psfi",
    "description": "public static final int",
    "type": "snippet",
    "language": "java",
    "body": "public static final int ${1:NAME} = ${2:0};"
  },
  {
    "id": "java.snippet.psfs",
    "label": "psfs",
    "description": "public static final String",
    "type": "snippet",
    "language": "java",
    "body": "public static final String ${1:NAME} = \"${2:value}\";"
  },
  {
    "id": "java.snippet.pri",
    "label": "pri",
    "description": "private int",
    "type": "snippet",
    "language": "java",
    "body": "private int ${1:name};"
  },
  {
    "id": "java.snippet.prs",
    "label": "prs",
    "description": "private String",
    "type": "snippet",
    "language": "java",
    "body": "private String ${1:name};"
  },
  {
    "id": "java.snippet.prb",
    "label": "prb",
    "description": "private boolean",
    "type": "snippet",
    "language": "java",
    "body": "private boolean ${1:name};"
  },
  {
    "id": "java.snippet.pui",
    "label": "pui",
    "description": "public int",
    "type": "snippet",
    "language": "java",
    "body": "public int ${1:name};"
  },
  {
    "id": "java.snippet.pus",
    "label": "pus",
    "description": "public String",
    "type": "snippet",
    "language": "java",
    "body": "public String ${1:name};"
  },
  {
    "id": "java.snippet.pub",
    "label": "pub",
    "description": "public boolean",
    "type": "snippet",
    "language": "java",
    "body": "public boolean ${1:name};"
  },
  {
    "id": "java.snippet.ctor",
    "label": "ctor",
    "description": "生成构造函数",
    "type": "snippet",
    "language": "java",
    "body": "public ${1:ClassName}() {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.get",
    "label": "get",
    "description": "生成 Getter 方法",
    "type": "snippet",
    "language": "java",
    "body": "public ${1:Type} get${2:PropertyName}() {\n\treturn ${3:propertyName};\n}"
  },
  {
    "id": "java.snippet.set",
    "label": "set",
    "description": "生成 Setter 方法",
    "type": "snippet",
    "language": "java",
    "body": "public void set${1:PropertyName}(${2:Type} ${3:propertyName}) {\n\tthis.${3:propertyName} = ${3:propertyName};\n}"
  },
  {
    "id": "java.snippet.thr",
    "label": "thr",
    "description": "throw new ...",
    "type": "snippet",
    "language": "java",
    "body": "throw new ${1:Exception}();"
  },
  {
    "id": "java.snippet.lazy",
    "label": "lazy",
    "description": "双重检查锁懒汉式单例",
    "type": "snippet",
    "language": "java",
    "body": "private static volatile ${1:Type} instance;\n\npublic static ${1:Type} getInstance() {\n\tif (instance == null) {\n\t\tsynchronized (${2:ClassName}.class) {\n\t\t\tif (instance == null) {\n\t\t\t\tinstance = new ${1:Type}();\n\t\t\t}\n\t\t}\n\t}\n\treturn instance;\n}"
  },
  {
    "id": "java.snippet.synchronized",
    "label": "synchronized",
    "description": "创建同步代码块",
    "type": "snippet",
    "language": "java",
    "body": "synchronized (${1:lock}) {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.override",
    "label": "@Override",
    "description": "插入 @Override 注解",
    "type": "snippet",
    "language": "java",
    "body": "@Override\n${0}"
  },
  {
    "id": "java.snippet.deprecated",
    "label": "@Deprecated",
    "description": "插入 @Deprecated 注解",
    "type": "snippet",
    "language": "java",
    "body": "@Deprecated\n${0}"
  },
  {
    "id": "java.snippet.suppress",
    "label": "@SuppressWarnings",
    "description": "插入 @SuppressWarnings 注解",
    "type": "snippet",
    "language": "java",
    "body": "@SuppressWarnings(\"${1:all}\")\n${0}"
  },
  {
    "id": "html.snippet.html5",
    "label": "html:5",
    "description": "创建 HTML5 文档结构",
    "type": "snippet",
    "language": "html",
    "body": "<!DOCTYPE html>\n<html lang=\"${1:en}\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<title>${2:Document}</title>\n</head>\n<body>\n\t${0}\n</body>\n</html>"
  },
  {
    "id": "html.snippet.divclass",
    "label": "div.class",
    "description": "创建一个带 class 的 div",
    "type": "snippet",
    "language": "html",
    "body": "<div class=\"${1:className}\">\n\t${0}\n</div>"
  },
  {
    "id": "html.snippet.divid",
    "label": "div#id",
    "description": "创建一个带 id 的 div",
    "type": "snippet",
    "language": "html",
    "body": "<div id=\"${1:idName}\">\n\t${0}\n</div>"
  },
  {
    "id": "html.snippet.linkcss",
    "label": "link:css",
    "description": "引入 CSS 文件",
    "type": "snippet",
    "language": "html",
    "body": "<link rel=\"stylesheet\" href=\"${1:style.css}\">"
  },
  {
    "id": "html.snippet.scriptsrc",
    "label": "script:src",
    "description": "引入 JavaScript 文件",
    "type": "snippet",
    "language": "html",
    "body": "<script src=\"${1:app.js}\"></script>"
  },
  {
    "id": "html.snippet.img",
    "label": "img",
    "description": "插入图片标签",
    "type": "snippet",
    "language": "html",
    "body": "<img src=\"${1:path/to/image.jpg}\" alt=\"${2:description}\">"
  },
  {
    "id": "html.snippet.a",
    "label": "a",
    "description": "插入链接标签",
    "type": "snippet",
    "language": "html",
    "body": "<a href=\"${1:#}\">${2:link text}</a>"
  },
  {
    "id": "html.snippet.table",
    "label": "table",
    "description": "创建一个基础表格",
    "type": "snippet",
    "language": "html",
    "body": "<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>${1:Header 1}</th>\n\t\t\t<th>${2:Header 2}</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>${3:Data 1}</td>\n\t\t\t<td>${4:Data 2}</td>\n\t\t</tr>\n\t</tbody>\n</table>"
  },
  {
    "id": "html.snippet.ul",
    "label": "ul>li",
    "description": "创建一个无序列表",
    "type": "snippet",
    "language": "html",
    "body": "<ul>\n\t<li>${1:Item 1}</li>\n\t<li>${2:Item 2}</li>\n\t${0}\n</ul>"
  },
  {
    "id": "html.snippet.ol",
    "label": "ol>li",
    "description": "创建一个有序列表",
    "type": "snippet",
    "language": "html",
    "body": "<ol>\n\t<li>${1:Item 1}</li>\n\t<li>${2:Item 2}</li>\n\t${0}\n</ol>"
  },
  {
    "id": "html.snippet.form.get",
    "label": "form:get",
    "description": "创建一个 GET 方法的表单",
    "type": "snippet",
    "language": "html",
    "body": "<form action=\"${1:action_page.php}\" method=\"get\">\n\t${0}\n</form>"
  },
  {
    "id": "html.snippet.form.post",
    "label": "form:post",
    "description": "创建一个 POST 方法的表单",
    "type": "snippet",
    "language": "html",
    "body": "<form action=\"${1:action_page.php}\" method=\"post\">\n\t${0}\n</form>"
  },
  {
    "id": "html.snippet.input.text",
    "label": "input:text",
    "description": "创建文本输入框",
    "type": "snippet",
    "language": "html",
    "body": "<input type=\"text\" name=\"${1:name}\" id=\"${2:id}\">"
  },
  {
    "id": "html.snippet.input.submit",
    "label": "input:submit",
    "description": "创建提交按钮",
    "type": "snippet",
    "language": "html",
    "body": "<input type=\"submit\" value=\"${1:Submit}\">"
  },
  {
    "id": "css.snippet.posa",
    "label": "pos:a",
    "description": "position: absolute;",
    "type": "snippet",
    "language": "css",
    "body": "position: absolute;"
  },
  {
    "id": "css.snippet.posr",
    "label": "pos:r",
    "description": "position: relative;",
    "type": "snippet",
    "language": "css",
    "body": "position: relative;"
  },
  {
    "id": "css.snippet.df",
    "label": "d:f",
    "description": "display: flex;",
    "type": "snippet",
    "language": "css",
    "body": "display: flex;"
  },
  {
    "id": "css.snippet.dg",
    "label": "d:g",
    "description": "display: grid;",
    "type": "snippet",
    "language": "css",
    "body": "display: grid;"
  },
  {
    "id": "css.snippet.jcc",
    "label": "jc:c",
    "description": "justify-content: center;",
    "type": "snippet",
    "language": "css",
    "body": "justify-content: center;"
  },
  {
    "id": "css.snippet.aic",
    "label": "ai:c",
    "description": "align-items: center;",
    "type": "snippet",
    "language": "css",
    "body": "align-items: center;"
  },
  {
    "id": "css.snippet.fdc",
    "label": "fd:c",
    "description": "flex-direction: column;",
    "type": "snippet",
    "language": "css",
    "body": "flex-direction: column;"
  },
  {
    "id": "css.snippet.media",
    "label": "@media",
    "description": "创建媒体查询",
    "type": "snippet",
    "language": "css",
    "body": "@media screen and (max-width: ${1:600px}) {\n\t${0}\n}"
  },
  {
    "id": "css.snippet.bgc",
    "label": "bgc",
    "description": "background-color: #...",
    "type": "snippet",
    "language": "css",
    "body": "background-color: #${1:fff};"
  },
  {
    "id": "css.snippet.c",
    "label": "c",
    "description": "color: #...",
    "type": "snippet",
    "language": "css",
    "body": "color: #${1:000};"
  },
  {
    "id": "css.snippet.m",
    "label": "m",
    "description": "margin: ...",
    "type": "snippet",
    "language": "css",
    "body": "margin: ${1:10px};"
  },
  {
    "id": "css.snippet.p",
    "label": "p",
    "description": "padding: ...",
    "type": "snippet",
    "language": "css",
    "body": "padding: ${1:10px};"
  },
  {
    "id": "css.snippet.bd",
    "label": "bd",
    "description": "border: ...",
    "type": "snippet",
    "language": "css",
    "body": "border: ${1:1px} ${2:solid} ${3:#000};"
  },
  {
    "id": "css.snippet.keyframes",
    "label": "@keyframes",
    "description": "创建动画关键帧",
    "type": "snippet",
    "language": "css",
    "body": "@keyframes ${1:animation-name} {\n\t0% { ${2} }\n\t100% { ${3} }\n}"
  },
  {
    "id": "js.snippet.log",
    "label": "log",
    "description": "插入 console.log()",
    "type": "snippet",
    "language": "javascript",
    "body": "console.log(${0});"
  },
  {
    "id": "js.snippet.warn",
    "label": "warn",
    "description": "插入 console.warn()",
    "type": "snippet",
    "language": "javascript",
    "body": "console.warn(${0});"
  },
  {
    "id": "js.snippet.error",
    "label": "error",
    "description": "插入 console.error()",
    "type": "snippet",
    "language": "javascript",
    "body": "console.error(${0});"
  },
  {
    "id": "js.snippet.fun",
    "label": "fun",
    "description": "创建一个函数声明",
    "type": "snippet",
    "language": "javascript",
    "body": "function ${1:name}(${2:params}) {\n\t${0}\n}"
  },
  {
    "id": "js.snippet.af",
    "label": "af",
    "description": "创建一个箭头函数",
    "type": "snippet",
    "language": "javascript",
    "body": "(${1:params}) => {\n\t${0}\n}"
  },
  {
    "id": "js.snippet.const-af",
    "label": "caf",
    "description": "创建一个常量箭头函数",
    "type": "snippet",
    "language": "javascript",
    "body": "const ${1:name} = (${2:params}) => {\n\t${0}\n};"
  },
  {
    "id": "js.snippet.prom",
    "label": "prom",
    "description": "创建一个新的 Promise",
    "type": "snippet",
    "language": "javascript",
    "body": "new Promise((resolve, reject) => {\n\t${0}\n});"
  },
  {
    "id": "js.snippet.async-fun",
    "label": "async",
    "description": "创建一个异步函数",
    "type": "snippet",
    "language": "javascript",
    "body": "async function ${1:name}(${2:params}) {\n\t${0}\n}"
  },
  {
    "id": "js.snippet.try",
    "label": "try",
    "description": "try-catch 代码块",
    "type": "snippet",
    "language": "javascript",
    "body": "try {\n\t${0}\n} catch (error) {\n\tconsole.error(error);\n}"
  },
  {
    "id": "js.snippet.getid",
    "label": "getid",
    "description": "document.getElementById",
    "type": "snippet",
    "language": "javascript",
    "body": "document.getElementById('${1:id}');"
  },
  {
    "id": "js.snippet.query",
    "label": "query",
    "description": "document.querySelector",
    "type": "snippet",
    "language": "javascript",
    "body": "document.querySelector('${1:selector}');"
  },
  {
    "id": "js.snippet.addevent",
    "label": "addevent",
    "description": "addEventListener",
    "type": "snippet",
    "language": "javascript",
    "body": "${1:element}.addEventListener('${2:click}', (e) => {\n\t${0}\n});"
  },
  {
    "id": "js.snippet.settimeout",
    "label": "timeout",
    "description": "setTimeout",
    "type": "snippet",
    "language": "javascript",
    "body": "setTimeout(() => {\n\t${0}\n}, ${1:1000});"
  },
  {
    "id": "vue.snippet.vbase",
    "label": "v-base",
    "description": "创建 Vue 3 <script setup> 组件结构",
    "type": "snippet",
    "language": "vue",
    "body": "<template>\n  <div>\n    ${0}\n  </div>\n</template>\n\n<script setup>\n\n</script>\n\n<style scoped>\n\n</style>"
  },
  {
    "id": "vue.snippet.vfor",
    "label": "v-for",
    "description": "插入 v-for 指令",
    "type": "snippet",
    "language": "vue",
    "body": "v-for=\"(${1:item}, index) in ${2:items}\" :key=\"index\""
  },
  {
    "id": "vue.snippet.vif",
    "label": "v-if",
    "description": "插入 v-if 指令",
    "type": "snippet",
    "language": "vue",
    "body": "v-if=\"${1:condition}\""
  },
  {
    "id": "vue.snippet.von",
    "label": "v-on",
    "description": "插入 v-on:click 指令",
    "type": "snippet",
    "language": "vue",
    "body": "@click=\"${1:handler}\""
  },
  {
    "id": "vue.snippet.vmodel",
    "label": "v-model",
    "description": "插入 v-model 指令",
    "type": "snippet",
    "language": "vue",
    "body": "v-model=\"${1:variable}\""
  },
  {
    "id": "vue.snippet.ref",
    "label": "ref",
    "description": "创建 Vue 3 ref",
    "type": "snippet",
    "language": "vue",
    "body": "const ${1:name} = ref(${2:initialValue});"
  },
  {
    "id": "vue.snippet.reactive",
    "label": "reactive",
    "description": "创建 Vue 3 reactive",
    "type": "snippet",
    "language": "vue",
    "body": "const ${1:state} = reactive({\n\t${0}\n});"
  },
  {
    "id": "vue.snippet.computed",
    "label": "computed",
    "description": "创建 Vue 3 computed property",
    "type": "snippet",
    "language": "vue",
    "body": "const ${1:name} = computed(() => {\n\treturn ${0}\n});"
  },
  {
    "id": "vue.snippet.watch",
    "label": "watch",
    "description": "创建 Vue 3 watch",
    "type": "snippet",
    "language": "vue",
    "body": "watch(${1:source}, (newValue, oldValue) => {\n\t${0}\n});"
  },
  {
    "id": "vue.snippet.onmounted",
    "label": "onMounted",
    "description": "Vue 3 onMounted lifecycle hook",
    "type": "snippet",
    "language": "vue",
    "body": "onMounted(() => {\n\t${0}\n});"
  },
  {
    "id": "java.snippet.list",
    "label": "list",
    "description": "创建一个新的 List",
    "type": "snippet",
    "language": "java",
    "body": "List<${1:String}> ${2:list} = new ArrayList<>();"
  },
  {
    "id": "java.snippet.map",
    "label": "map",
    "description": "创建一个新的 Map",
    "type": "snippet",
    "language": "java",
    "body": "Map<${1:String}, ${2:Object}> ${3:map} = new HashMap<>();"
  },
  {
    "id": "java.snippet.set",
    "label": "set",
    "description": "创建一个新的 Set",
    "type": "snippet",
    "language": "java",
    "body": "Set<${1:String}> ${2:set} = new HashSet<>();"
  },
  {
    "id": "java.snippet.arraylist",
    "label": "arraylist",
    "description": "创建一个新的 ArrayList",
    "type": "snippet",
    "language": "java",
    "body": "ArrayList<${1:String}> ${2:list} = new ArrayList<>();"
  },
  {
    "id": "java.snippet.hashmap",
    "label": "hashmap",
    "description": "创建一个新的 HashMap",
    "type": "snippet",
    "language": "java",
    "body": "HashMap<${1:String}, ${2:Object}> ${3:map} = new HashMap<>();"
  },
  {
    "id": "java.snippet.test",
    "label": "@Test",
    "description": "创建一个 JUnit 测试方法",
    "type": "snippet",
    "language": "java",
    "body": "@Test\npublic void ${1:testMethodName}() {\n\t${0}\n}"
  },
  {
    "id": "java.snippet.assertequals",
    "label": "assertEquals",
    "description": "插入 assertEquals 断言",
    "type": "snippet",
    "language": "java",
    "body": "assertEquals(${1:expected}, ${2:actual});"
  },
  {
    "id": "java.snippet.asserttrue",
    "label": "assertTrue",
    "description": "插入 assertTrue 断言",
    "type": "snippet",
    "language": "java",
    "body": "assertTrue(${1:condition});"
  },
  {
    "id": "java.snippet.assertfalse",
    "label": "assertFalse",
    "description": "插入 assertFalse 断言",
    "type": "snippet",
    "language": "java",
    "body": "assertFalse(${1:condition});"
  },
  {
    "id": "java.snippet.assertnull",
    "label": "assertNull",
    "description": "插入 assertNull 断言",
    "type": "snippet",
    "language": "java",
    "body": "assertNull(${1:object});"
  },
  {
    "id": "java.snippet.assertnotnull",
    "label": "assertNotNull",
    "description": "插入 assertNotNull 断言",
    "type": "snippet",
    "language": "java",
    "body": "assertNotNull(${1:object});"
  },
  {
    "id": "java.snippet.logger",
    "label": "logger",
    "description": "创建一个 SLF4J Logger 实例",
    "type": "snippet",
    "language": "java",
    "body": "private static final Logger logger = LoggerFactory.getLogger(${1:ClassName}.class);"
  },
  {
    "id": "java.snippet.loginfo",
    "label": "loginfo",
    "description": "记录一条 INFO 级别的日志",
    "type": "snippet",
    "language": "java",
    "body": "logger.info(\"${1:message}\");"
  },
  {
    "id": "java.snippet.logdebug",
    "label": "logdebug",
    "description": "记录一条 DEBUG 级别的日志",
    "type": "snippet",
    "language": "java",
    "body": "logger.debug(\"${1:message}\");"
  },
  {
    "id": "java.snippet.logwarn",
    "label": "logwarn",
    "description": "记录一条 WARN 级别的日志",
    "type": "snippet",
    "language": "java",
    "body": "logger.warn(\"${1:message}\");"
  },
  {
    "id": "java.snippet.logerror",
    "label": "logerror",
    "description": "记录一条 ERROR 级别的日志",
    "type": "snippet",
    "language": "java",
    "body": "logger.error(\"${1:message}\", ${2:exception});"
  },
  {
    "id": "java.snippet.lambda",
    "label": "lambda",
    "description": "创建一个 Lambda 表达式",
    "type": "snippet",
    "language": "java",
    "body": "(${1:params}) -> ${2:expression}"
  },
  {
    "id": "java.snippet.stream",
    "label": "stream",
    "description": "从集合创建 Stream",
    "type": "snippet",
    "language": "java",
    "body": "${1:collection}.stream()\n\t.filter(${2:e -> e...})\n\t.map(${3:e -> e...})\n\t.collect(Collectors.toList());"
  },
  {
    "id": "java.snippet.foreach",
    "label": "foreach",
    "description": "使用 forEach 方法遍历集合",
    "type": "snippet",
    "language": "java",
    "body": "${1:collection}.forEach(${2:item} -> {\n\t${0}\n});"
  },
  {
    "id": "java.snippet.singleton.eager",
    "label": "singleton",
    "description": "饿汉式单例模式",
    "type": "snippet",
    "language": "java",
    "body": "private static final ${1:ClassName} INSTANCE = new ${1:ClassName}();\n\nprivate ${1:ClassName}() {}\n\npublic static ${1:ClassName} getInstance() {\n\treturn INSTANCE;\n}"
  },
  {
    "id": "java.snippet.toString",
    "label": "toString",
    "description": "生成 toString() 方法",
    "type": "snippet",
    "language": "java",
    "body": "@Override\npublic String toString() {\n\treturn \"${1:ClassName}{\" +\n\t\t\t// ...\n\t\t\t'}';\n}"
  },
  {
    "id": "java.snippet.equals",
    "label": "equals",
    "description": "生成 equals() 和 hashCode() 方法",
    "type": "snippet",
    "language": "java",
    "body": "@Override\npublic boolean equals(Object o) {\n\tif (this == o) return true;\n\tif (o == null || getClass() != o.getClass()) return false;\n\t${1:ClassName} that = (${1:ClassName}) o;\n\treturn ${2:field} == that.${2:field};\n}\n\n@Override\npublic int hashCode() {\n\treturn Objects.hash(${2:field});\n}"
  },
  {
    "id": "java.snippet.runnable",
    "label": "runnable",
    "description": "创建一个 Runnable 实例",
    "type": "snippet",
    "language": "java",
    "body": "Runnable ${1:runnable} = () -> {\n\t${0}\n};"
  },
  {
    "id": "java.snippet.thread",
    "label": "thread",
    "description": "创建一个新线程",
    "type": "snippet",
    "language": "java",
    "body": "new Thread(() -> {\n\t${0}\n}).start();"
  }
]